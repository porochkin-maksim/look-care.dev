version: '3'

# remove all images
# docker rmi -f $(docker images -aq)

# remove all volumes
# docker volume rm $(docker volume ls -q)

# docker rm $(docker ps -a -f status=exited -q)
# docker-compose exec app ls -la /var/www
# docker exec -it look_care_db bash

#Docker Networks
networks:
    app-network:
        driver: bridge

services:

    #PHP Service
    app:
        container_name: look_care_app
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Nginx Service
    nginx:
        container_name: look_care_nginx
        image: nginx:latest
        restart: unless-stopped
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - "8876:80"
        depends_on:
            - app
            - nodejs
        networks:
            - app-network

    db:
        container_name: look_care_db
        image: mysql:8.0
        restart: unless-stopped
        volumes:
            - ./tmp/db/:/var/lib/mysql/
            - ./_docker/mysql/my.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_DATABASE: look-care
            MYSQL_USER: user
            MYSQL_PASSWORD: user
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "8101:3306"
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --default-authentication-plugin=mysql_native_password
        networks:
            - app-network

    nodejs:
        image: node:16
        container_name: look_care_npm
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - "5173:5173"
        networks:
            - app-network
